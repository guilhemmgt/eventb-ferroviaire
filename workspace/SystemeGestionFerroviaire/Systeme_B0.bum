<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd" version="5">
    <org.eventb.core.refinesMachine name="'" org.eventb.core.target="Systeme_A2"/>
    <org.eventb.core.seesContext name="*" org.eventb.core.target="Systeme_ctx_B0_Instance_1"/>
    <org.eventb.core.variable name="/" org.eventb.core.identifier="Position_wagon"/>
    <org.eventb.core.variable name="5" org.eventb.core.identifier="Destination"/>
    <org.eventb.core.event name="6" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="INITIALISATION">
        <org.eventb.core.action name="*" org.eventb.core.assignment="Destination ≔ ∅" org.eventb.core.comment="Un train n'a pas de destination initiale" org.eventb.core.label="act3"/>
        <org.eventb.core.action name="'" org.eventb.core.assignment="Route ≔ ∅" org.eventb.core.comment="Un train n'a pas de route initiale (= a une route vide)" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="(" org.eventb.core.assignment="Position_wagon ≔ Position_initiale ∘ (train_de_w)" org.eventb.core.comment="&#9;Un train a une position initiale, sur 1 unique tronçon" org.eventb.core.label="act2"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="7" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="AvancerWagonTete">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="AvancerTete"/>
        <org.eventb.core.action name="internal1" org.eventb.core.assignment="Position_wagon ≔ ({wagon} ⩤ Position_wagon)&#13;&#10;&#9;&#9;&#9;&#9;∪ {_wagon  ↦ _troncon ∣ _wagon = wagon ∧ train ↦ (0 ↦ _troncon) ∈ Route}" org.eventb.core.label="act1"/>
        <org.eventb.core.parameter name=")" org.eventb.core.identifier="train"/>
        <org.eventb.core.guard name="internal1" org.eventb.core.label="grd1" org.eventb.core.predicate="train ∈ TRAINS"/>
        <org.eventb.core.guard name="internal6" org.eventb.core.comment="On ne peut avancer la tête que si on a déjà avancé tous les wagons du train" org.eventb.core.label="grd2" org.eventb.core.predicate="∀ w · w ∈ WAGONS ∧ train_de_w(w) = train ⇒ Position_wagon(w) = Position_wagon(wagon)"/>
        <org.eventb.core.guard name="-" org.eventb.core.comment=" Le train doit avoir une destination" org.eventb.core.label="grd3" org.eventb.core.predicate="train ∈ dom(Destination)"/>
        <org.eventb.core.guard name="(" org.eventb.core.comment="Le train a une route non vide" org.eventb.core.label="grd4" org.eventb.core.predicate="{x ∣ train ↦ x ∈ Route} ≠ ∅"/>
        <org.eventb.core.guard name="internal3" org.eventb.core.comment="Le tronçon est libre" org.eventb.core.label="grd5" org.eventb.core.predicate="{t ∣train ↦(0↦t) ∈ Route} ⊈ (ran(Position_wagon))"/>
        <org.eventb.core.guard name="2" org.eventb.core.label="grd6" org.eventb.core.predicate="wagon ∈ WAGONS"/>
        <org.eventb.core.guard name="3" org.eventb.core.comment="Le wagon est le wagon tête" org.eventb.core.label="grd7" org.eventb.core.predicate="wagon ∉ dom(predecesseur_de_w)"/>
        <org.eventb.core.guard name="4" org.eventb.core.comment="Le wagon appartient au train &quot;train&quot;" org.eventb.core.label="grd8" org.eventb.core.predicate="(wagon ↦ train) ∈ train_de_w"/>
        <org.eventb.core.parameter name="1" org.eventb.core.identifier="wagon"/>
        <org.eventb.core.action name="act1" org.eventb.core.assignment="Route ≔ ({train}⩤Route)&#13;&#10;&#9;&#9;∪ {_train↦(i−1↦t) ∣ _train=train ∧ i≠0 ∧ i↦t∈(Route[{train}]) }" org.eventb.core.label="act2"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="8" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="AvancerWagonQueue">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="AvancerQueue"/>
        <org.eventb.core.action name="internal1" org.eventb.core.assignment="Position_wagon(wagon) ≔ Position_wagon(predecesseur_de_w(wagon))" org.eventb.core.label="act1"/>
        <org.eventb.core.parameter name=")" org.eventb.core.identifier="train"/>
        <org.eventb.core.guard name="internal4" org.eventb.core.label="grd1" org.eventb.core.predicate="train ∈ TRAINS"/>
        <org.eventb.core.guard name="-" org.eventb.core.comment=" Le train doit avoir une destination" org.eventb.core.label="grd2" org.eventb.core.predicate="train ∈ dom(Destination)"/>
        <org.eventb.core.guard name="1" org.eventb.core.label="grd3" org.eventb.core.predicate="wagon ∈ WAGONS"/>
        <org.eventb.core.guard name="4" org.eventb.core.comment="Le wagon appartient au train &quot;train&quot;" org.eventb.core.label="grd4" org.eventb.core.predicate="(wagon ↦ train) ∈ train_de_w"/>
        <org.eventb.core.guard name="." org.eventb.core.comment="On ne peut avancer le wagon que si le wagon d'avant a avancé" org.eventb.core.label="grd5" org.eventb.core.predicate="(Position_wagon(wagon) ↦ Position_wagon(predecesseur_de_w(wagon))) ∈ Reseau"/>
        <org.eventb.core.parameter name="2" org.eventb.core.identifier="wagon"/>
        <org.eventb.core.guard name="internal5" org.eventb.core.comment="Le wagon a un predecesseur" org.eventb.core.label="grd6" org.eventb.core.predicate="wagon ∈ dom(predecesseur_de_w)"/>
        <org.eventb.core.guard name="internal6" org.eventb.core.comment="Le wagon est le wagon queue  " org.eventb.core.label="grd7" org.eventb.core.predicate="wagon ∉ dom(successeur_de_w)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name=";" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="AvancerWagonIntermediaire">
        <org.eventb.core.parameter name="'" org.eventb.core.identifier="wagon"/>
        <org.eventb.core.parameter name=")" org.eventb.core.identifier="train"/>
        <org.eventb.core.action name="1" org.eventb.core.assignment="Position_wagon(wagon) ≔ Position_wagon(predecesseur_de_w(wagon))" org.eventb.core.label="act1"/>
        <org.eventb.core.guard name="grd1" org.eventb.core.label="grd1" org.eventb.core.predicate="train ∈ TRAINS"/>
        <org.eventb.core.guard name="grd2" org.eventb.core.comment=" Le train doit avoir une destination" org.eventb.core.label="grd2" org.eventb.core.predicate="train ∈ dom(Destination)"/>
        <org.eventb.core.guard name="grd3" org.eventb.core.label="grd3" org.eventb.core.predicate="wagon ∈ WAGONS"/>
        <org.eventb.core.guard name="grd4" org.eventb.core.comment="Le wagon appartient au train &quot;train&quot;" org.eventb.core.label="grd4" org.eventb.core.predicate="(wagon ↦ train) ∈ train_de_w"/>
        <org.eventb.core.guard name="grd5" org.eventb.core.comment="On ne peut avancer le wagon que si le wagon d'avant a avancé" org.eventb.core.label="grd5" org.eventb.core.predicate="(Position_wagon(wagon) ↦ Position_wagon(predecesseur_de_w(wagon))) ∈ Reseau"/>
        <org.eventb.core.guard name="grd6" org.eventb.core.comment="Le wagon a un predecesseur" org.eventb.core.label="grd6" org.eventb.core.predicate="wagon ∈ dom(predecesseur_de_w)"/>
        <org.eventb.core.guard name="grd7" org.eventb.core.comment="Le wagon n'est pas le wagon queue  " org.eventb.core.label="grd7" org.eventb.core.predicate="wagon ∈ dom(successeur_de_w)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="9" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="AttribuerDestination">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="AttribuerDestination"/>
    </org.eventb.core.event>
    <org.eventb.core.event name=":" org.eventb.core.comment="Le train arrive à destination" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="ArriverDestination">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="ArriverDestination"/>
        <org.eventb.core.parameter name="'" org.eventb.core.identifier="train"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd1" org.eventb.core.predicate="train ∈ TRAINS"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Arriver à destination requiert d'avoir une destination." org.eventb.core.label="grd2" org.eventb.core.predicate="train ∈ dom(Destination)"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="Destination ≔ {train} ⩤ Destination" org.eventb.core.comment="On enlève la destination pour pouvoir la réattribuer dans le futur" org.eventb.core.label="act1"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="L'entièreté du train est dans l'arrêt de destination" org.eventb.core.label="grd3" org.eventb.core.predicate="∀ w · w ∈ WAGONS ∧ train_de_w(w) = train ⇒ Position_wagon(w) = Destination(train)"/>
    </org.eventb.core.event>
    <org.eventb.core.invariant name="=" org.eventb.core.label="inv1" org.eventb.core.predicate="Position_wagon ∈ WAGONS → TRONCONS "/>
    <org.eventb.core.variable name="@" org.eventb.core.identifier="Route"/>
    <org.eventb.core.event name="A" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="AttribuerRoute">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="AttribuerRoute"/>
        <org.eventb.core.guard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="train ∈ TRAINS"/>
        <org.eventb.core.parameter name="(" org.eventb.core.identifier="train"/>
        <org.eventb.core.parameter name=")" org.eventb.core.identifier="route"/>
        <org.eventb.core.guard name="-" org.eventb.core.label="grd2" org.eventb.core.predicate="route ∈ ℙ(ℕ × TRONCONS)"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="    Le train doit avoir une destination" org.eventb.core.label="grd3" org.eventb.core.predicate="train ∈ dom(Destination)"/>
        <org.eventb.core.action name="," org.eventb.core.assignment="Route ≔ (Route ∖ {t↦x ∣ t↦x∈Route ∧ t=train}) ∪ {t↦x ∣ x∈route ∧ t=train}" org.eventb.core.comment="   Remplace la route actuelle du train par sa nouvelle route" org.eventb.core.label="act1"/>
        <org.eventb.core.guard name="grd=" org.eventb.core.label="grd4" org.eventb.core.predicate="finite(route)"/>
        <org.eventb.core.guard name="grd7" org.eventb.core.comment="    Deux tronçons ne peuvent pas avoir le même indice" org.eventb.core.label="grd5" org.eventb.core.predicate="∀ i · i∈dom(route) ⇒ card({tr ∣ tr∈TRONCONS ∧ i↦tr∈route}) = 1"/>
        <org.eventb.core.guard name="grd8" org.eventb.core.comment="    Les tronçons sont numérotés de 0 à card-1" org.eventb.core.label="grd6" org.eventb.core.predicate="∀ i,tr · i∈dom(route) ∧ tr∈ran(route) ∧ i↦tr∈route ⇒ 0≤i ∧ i≤card(route)−1"/>
        <org.eventb.core.guard name="grd1" org.eventb.core.comment="    Deux tronçons d'indices successifs&#13;&#10;     se suivent dans le réseau" org.eventb.core.label="grd7" org.eventb.core.predicate="∀ i,tr1,tr2 · i∈dom(route) ∧ tr1∈ran(route) ∧ tr2∈ran(route)&#13;&#10;&#9;&#9;&#9;&#9;&#9;&#9;   ∧ i−1↦tr1∈route ∧ i↦tr2∈route ⇒ tr1↦tr2∈Reseau"/>
        <org.eventb.core.guard name="grd9" org.eventb.core.comment="    La route commence devant le train" org.eventb.core.label="grd8" org.eventb.core.predicate="∃ tr · tr∈ran(route) ∧ (∃ w · w ∈ WAGONS ∧ train_de_w(w) = train ∧ w ∉ dom(predecesseur_de_w) ∧ Position_wagon(w)↦tr∈Reseau) ∧ 0↦tr∈route"/>
        <org.eventb.core.guard name="grd&gt;" org.eventb.core.label="grd9" org.eventb.core.predicate="card(route) = 3"/>
    </org.eventb.core.event>
    <org.eventb.core.invariant name="B" org.eventb.core.label="inv2" org.eventb.core.predicate="∀ t · t ∈ TRAINS ⇒ card({w ∣ w ∈ WAGONS ∧ train_de_w(w) = t ∧ w ∉ dom(predecesseur_de_w)}) = 1"/>
    <org.eventb.core.invariant name="C" org.eventb.core.label="inv3" org.eventb.core.predicate="∀ t · t ∈ TRAINS ⇒ card({w ∣ w ∈ WAGONS ∧ train_de_w(w) = t ∧ w ∉ dom(successeur_de_w)}) = 1"/>
    <org.eventb.core.invariant name="D" org.eventb.core.comment="Invariant de collage entre Position_tete et Position_wagon" org.eventb.core.label="inv4" org.eventb.core.predicate="∀ t · t ∈ TRAINS ⇒ (∃ w · w ∈ WAGONS ∧ w ∉ dom(predecesseur_de_w) ∧ train_de_w(w) = t ∧ Position_tete(t) = Position_wagon(w))"/>
</org.eventb.core.machineFile>
